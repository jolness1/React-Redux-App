[{"/Users/jacobolness/Documents/Git/React-Redux-App/app/src/index.js":"1","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/App.js":"2","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/components/components.js":"3","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/actions/actions.js":"4","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/reducers/reducers.js":"5"},{"size":492,"mtime":1607579771918,"results":"6","hashOfConfig":"7"},{"size":236,"mtime":1607550161263,"results":"8","hashOfConfig":"7"},{"size":839,"mtime":1607581897851,"results":"9","hashOfConfig":"7"},{"size":1095,"mtime":1607580793326,"results":"10","hashOfConfig":"7"},{"size":781,"mtime":1607553094380,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"s6mond",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/jacobolness/Documents/Git/React-Redux-App/app/src/index.js",[],["25","26"],"/Users/jacobolness/Documents/Git/React-Redux-App/app/src/App.js",[],"/Users/jacobolness/Documents/Git/React-Redux-App/app/src/components/components.js",["27"],"import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport { getFact } from '../actions/actions';\n\nconst Facts = ({ fact, isFetching, error, getFact }) => {\n    useEffect(() => {\n        getFact();\n    },[]);\n\n    if (error) {\n        return <h2> Houston, we have a problem: {error}</h2>;\n    }\n\n    if (isFetching) {\n        return <h2>Fetching a useless fact, one moment.</h2>;\n    }\n\n    const handleClick = () => {\n        getFact();\n    }\n\n \n    return (\n        <>\n        <h2>Useless Fact: {fact}</h2>\n        <button onClick={handleClick}>Learn something useless</button>\n        </>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        fact: state.quote,\n        isFetching: state.isFetching,\n        error: state.error\n    };\n};\n\nexport default connect(mapStateToProps, {getFact})(Facts);","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/actions/actions.js",["28","29","30"],"import axios from 'axios';\n\nexport const FETCHING_DATA_START = 'FETCHING_DATA_START';\nexport const FETCHING_DATA_SUCCESS = 'FETCHING_DATA_SUCCESS';\nexport const FETCHING_DATA_FAIL = 'FETCHING_DATA_FAIL';\n\n\nexport const getFact = () => {\n    return (dispatch => {\n        \n        dispatch({type:FETCHING_DATA_START});\n\n            axios\n                .get(`https://uselessfacts.jsph.pl/random.json?language=en`)\n                .then(res => {\n                    console.log(res.data.text);\n                    dispatch({type:FETCHING_DATA_SUCCESS, payload:res.data.text});\n                })          \n                .catch(err => {\n                    console.log(err.response.message);\n                    dispatch({type:FETCHING_DATA_FAIL, payload:err.response.message});\n                });\n    });\n}\n\nconst setFetchStart = (name) => {\n    // debugger;\n    return({type:FETCHING_DATA_SUCCESS});\n}\n\nconst setFetchSuccess = (name) => {\n    // debugger;\n    return({type:FETCHING_DATA_SUCCESS});\n}\n\nconst setFetchFail = (name) => {\n    // debugger;\n    return({type:FETCHING_DATA_FAIL});\n}\n","/Users/jacobolness/Documents/Git/React-Redux-App/app/src/reducers/reducers.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":9,"column":7,"nodeType":"37","endLine":9,"endColumn":9,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":26,"column":7,"nodeType":"41","messageId":"42","endLine":26,"endColumn":20},{"ruleId":"39","severity":1,"message":"43","line":31,"column":7,"nodeType":"41","messageId":"42","endLine":31,"endColumn":22},{"ruleId":"39","severity":1,"message":"44","line":36,"column":7,"nodeType":"41","messageId":"42","endLine":36,"endColumn":19},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFact'. Either include it or remove the dependency array. If 'getFact' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["47"],"no-unused-vars","'setFetchStart' is assigned a value but never used.","Identifier","unusedVar","'setFetchSuccess' is assigned a value but never used.","'setFetchFail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [getFact]",{"range":"50","text":"51"},[232,234],"[getFact]"]